<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:component-scan base-package="com.dayuan">
		<context:exclude-filter
			type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 注意：如果配置了<context:component-scan>那么<context:annotation-config/>标签就可以不用再xml中配置了，因为前者包含了后者 -->
	<!-- <context:annotation-config /> -->

	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
       <property name="locations">
           <list>
               <value>classpath:jdbc.properties</value>
               <value>classpath:redis.properties</value>
           </list>
       </property>
    </bean>
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="properties" ref="configProperties"/>
	</bean>

	<bean
		id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init"
		destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property
			name="url"
			value="${jdbc_url}" />
		<property
			name="username"
			value="${jdbc_user}" />
		<property
			name="password"
			value="${jdbc_password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property
			name="initialSize"
			value="3" />
		<property
			name="minIdle"
			value="1" />
		<property
			name="maxActive"
			value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property
			name="maxWait"
			value="60000" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean
		id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property
			name="dataSource"
			ref="dataSource" />
		<property
			name="configLocation"
			value="classpath:mybatis-config.xml" />
		<!-- 自动扫描mapping.xml文件，**表示迭代查找 -->
		<property
			name="mapperLocations"
			value="classpath:com/dayuan/dao/**/*.xml" />
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 ,包下的类需要使用@MapperScan注解,否则容器注入会失败 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property
			name="basePackage"
			value="com.dayuan.dao" />
		<property
			name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean
		id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property
			name="dataSource"
			ref="dataSource" />
	</bean>

	<!-- 第四种配置事务的方式，注解 -->
	<tx:annotation-driven
		proxy-target-class="true"
		transaction-manager="transactionManager" />


	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> <aop:config> <aop:aspect 
		id="time" ref="timeHandler"> <aop:pointcut id="addAllMethod" expression="execution(* 
		com.dayuan.test.HelloWorldImpl.*(..))" /> <aop:before method="printTime" 
		pointcut-ref="addAllMethod" /> <aop:after method="printTime" pointcut-ref="addAllMethod" 
		/> </aop:aspect> </aop:config> -->
	<import resource="classpath:/spring-cxf.xml"/>
	<import resource="classpath:/spring-redis.xml"/>
</beans>